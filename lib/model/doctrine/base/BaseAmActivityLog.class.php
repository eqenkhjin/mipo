<?php

/**
 * BaseAmActivityLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $object_action_conn_id
 * @property integer $object_type_id
 * @property integer $object_id
 * @property integer $where_id
 * @property integer $group_id
 * @property string $sentence_html
 * @property AmUser $AmUser
 * @property AmObjectActionConn $AmObjectActionConn
 * @property AmWhere $AmWhere
 * @property Doctrine_Collection $AmUserNotificationRead
 * 
 * @method integer             getUserId()                 Returns the current record's "user_id" value
 * @method integer             getObjectActionConnId()     Returns the current record's "object_action_conn_id" value
 * @method integer             getObjectTypeId()           Returns the current record's "object_type_id" value
 * @method integer             getObjectId()               Returns the current record's "object_id" value
 * @method integer             getWhereId()                Returns the current record's "where_id" value
 * @method integer             getGroupId()                Returns the current record's "group_id" value
 * @method string              getSentenceHtml()           Returns the current record's "sentence_html" value
 * @method AmUser              getAmUser()                 Returns the current record's "AmUser" value
 * @method AmObjectActionConn  getAmObjectActionConn()     Returns the current record's "AmObjectActionConn" value
 * @method AmWhere             getAmWhere()                Returns the current record's "AmWhere" value
 * @method Doctrine_Collection getAmUserNotificationRead() Returns the current record's "AmUserNotificationRead" collection
 * @method AmActivityLog       setUserId()                 Sets the current record's "user_id" value
 * @method AmActivityLog       setObjectActionConnId()     Sets the current record's "object_action_conn_id" value
 * @method AmActivityLog       setObjectTypeId()           Sets the current record's "object_type_id" value
 * @method AmActivityLog       setObjectId()               Sets the current record's "object_id" value
 * @method AmActivityLog       setWhereId()                Sets the current record's "where_id" value
 * @method AmActivityLog       setGroupId()                Sets the current record's "group_id" value
 * @method AmActivityLog       setSentenceHtml()           Sets the current record's "sentence_html" value
 * @method AmActivityLog       setAmUser()                 Sets the current record's "AmUser" value
 * @method AmActivityLog       setAmObjectActionConn()     Sets the current record's "AmObjectActionConn" value
 * @method AmActivityLog       setAmWhere()                Sets the current record's "AmWhere" value
 * @method AmActivityLog       setAmUserNotificationRead() Sets the current record's "AmUserNotificationRead" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Mipo Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAmActivityLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('am_activity_log');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('object_action_conn_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('object_type_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('object_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('where_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sentence_html', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AmUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('AmObjectActionConn', array(
             'local' => 'object_action_conn_id',
             'foreign' => 'id'));

        $this->hasOne('AmWhere', array(
             'local' => 'where_id',
             'foreign' => 'id'));

        $this->hasMany('AmUserNotificationRead', array(
             'local' => 'id',
             'foreign' => 'activity_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}