<?php

/**
 * BaseAmFriendRequest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $sender_id
 * @property integer $receiver_id
 * @property boolean $is_accept
 * @property timestamp $send_date
 * @property timestamp $received_date
 * @property AmUser $Receiver
 * 
 * @method integer         getSenderId()      Returns the current record's "sender_id" value
 * @method integer         getReceiverId()    Returns the current record's "receiver_id" value
 * @method boolean         getIsAccept()      Returns the current record's "is_accept" value
 * @method timestamp       getSendDate()      Returns the current record's "send_date" value
 * @method timestamp       getReceivedDate()  Returns the current record's "received_date" value
 * @method AmUser          getReceiver()      Returns the current record's "Receiver" value
 * @method AmFriendRequest setSenderId()      Sets the current record's "sender_id" value
 * @method AmFriendRequest setReceiverId()    Sets the current record's "receiver_id" value
 * @method AmFriendRequest setIsAccept()      Sets the current record's "is_accept" value
 * @method AmFriendRequest setSendDate()      Sets the current record's "send_date" value
 * @method AmFriendRequest setReceivedDate()  Sets the current record's "received_date" value
 * @method AmFriendRequest setReceiver()      Sets the current record's "Receiver" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Mipo Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAmFriendRequest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('am_friend_request');
        $this->hasColumn('sender_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('receiver_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_accept', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('send_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('received_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AmUser as Receiver', array(
             'local' => 'receiver_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}