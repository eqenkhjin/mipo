<?php

/**
 * BaseAmShopCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $parent_id
 * @property integer $sort_order
 * @property integer $created_user_id
 * @property Doctrine_Collection $AmOptions
 * @property Doctrine_Collection $AmGroups
 * @property AmShopCategoryGroupConn $AmShopCategoryGroupConn
 * @property Doctrine_Collection $AmShopCategoryOptions
 * @property Doctrine_Collection $AmShopProduct
 * 
 * @method integer                 getId()                      Returns the current record's "id" value
 * @method string                  getName()                    Returns the current record's "name" value
 * @method integer                 getParentId()                Returns the current record's "parent_id" value
 * @method integer                 getSortOrder()               Returns the current record's "sort_order" value
 * @method integer                 getCreatedUserId()           Returns the current record's "created_user_id" value
 * @method Doctrine_Collection     getAmOptions()               Returns the current record's "AmOptions" collection
 * @method Doctrine_Collection     getAmGroups()                Returns the current record's "AmGroups" collection
 * @method AmShopCategoryGroupConn getAmShopCategoryGroupConn() Returns the current record's "AmShopCategoryGroupConn" value
 * @method Doctrine_Collection     getAmShopCategoryOptions()   Returns the current record's "AmShopCategoryOptions" collection
 * @method Doctrine_Collection     getAmShopProduct()           Returns the current record's "AmShopProduct" collection
 * @method AmShopCategory          setId()                      Sets the current record's "id" value
 * @method AmShopCategory          setName()                    Sets the current record's "name" value
 * @method AmShopCategory          setParentId()                Sets the current record's "parent_id" value
 * @method AmShopCategory          setSortOrder()               Sets the current record's "sort_order" value
 * @method AmShopCategory          setCreatedUserId()           Sets the current record's "created_user_id" value
 * @method AmShopCategory          setAmOptions()               Sets the current record's "AmOptions" collection
 * @method AmShopCategory          setAmGroups()                Sets the current record's "AmGroups" collection
 * @method AmShopCategory          setAmShopCategoryGroupConn() Sets the current record's "AmShopCategoryGroupConn" value
 * @method AmShopCategory          setAmShopCategoryOptions()   Sets the current record's "AmShopCategoryOptions" collection
 * @method AmShopCategory          setAmShopProduct()           Sets the current record's "AmShopProduct" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Mipo Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAmShopCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('am_shop_category');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('sort_order', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('created_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AmShopOption as AmOptions', array(
             'refClass' => 'AmShopCategoryOptionConn',
             'local' => 'category_id',
             'foreign' => 'option_id'));

        $this->hasMany('AmGroup as AmGroups', array(
             'refClass' => 'AmShopCategoryGroupConn',
             'local' => 'category_id',
             'foreign' => 'group_id'));

        $this->hasOne('AmShopCategoryGroupConn', array(
             'local' => 'id',
             'foreign' => 'shop_category_id'));

        $this->hasMany('AmShopCategoryOptionConn as AmShopCategoryOptions', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('AmShopProduct', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}